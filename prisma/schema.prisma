// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Business {
  id            Int       @id @default(autoincrement())
  business_name String
  description   String
  address       String
  city          String
  state         String
  zip           String
  phone         String
  email         String
  category      String
  image         String?
  latitude      Float?
  longitude     Float?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  reviews       Review[]
  Product       Product[]
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  firstName String
  lastName  String
  phone     String
  address   String
  city      String
  state     String
  zip       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Order     Order[]
  Cart      Cart[]
}

model Product {
  id                 Int          @id @default(autoincrement())
  product_name       String
  productDescription String       @default("No description")
  productPrice       Float        @default(0)
  productImage       String?      @default("https://via.placeholder.com/150")
  business_id        Int
  business           Business     @relation(fields: [business_id], references: [id])
  rating             Int?         @default(0)
  createdAt          DateTime     @default(now())
  updatedAt          DateTime     @updatedAt
  OrderDetail        OrderDetail? @relation(fields: [orderDetailId], references: [id])
  orderDetailId      Int?
  cartId             Int?
  Cart               Cart?        @relation(fields: [cartId], references: [id])
  quantity           Int?         @default(0)
}

model Review {
  id         Int      @id @default(autoincrement())
  review     String
  rating     Int
  businessId Int
  business   Business @relation(fields: [businessId], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Order {
  id            Int          @id @default(autoincrement())
  orderDate     DateTime     @default(now())
  userId        Int?
  user          User?        @relation(fields: [userId], references: [id])
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  isPaid        Boolean      @default(false)
  paidAt        DateTime?
  isDelivered   Boolean      @default(false)
  deliveredAt   DateTime?
  orderDetail   OrderDetail? @relation(fields: [orderDetailId], references: [id])
  orderDetailId Int?
}

model OrderDetail {
  id        Int       @id @default(autoincrement())
  products  Product[]
  price     Float
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Order     Order[]
}

model Cart {
  id        Int       @id @default(autoincrement())
  userId    Int
  user      User      @relation(fields: [userId], references: [id])
  products  Product[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  price     Float     @default(0)
}
